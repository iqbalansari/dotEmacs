* Unset some keybindings
  #+begin_src emacs-lisp
    (when (boundp 'ensime-mode-map)
      (dolist (letter '("r" "o" "l" "m" "i" "t"))
        (define-key ensime-mode-map (kbd (concat "C-c C-r " letter)) nil))
    
      (define-key ensime-mode-map (kbd "C-c C-r") nil)
    
      (dolist (letter '("c" "n" "p" "s"))
        (define-key ensime-mode-map (kbd (concat "C-c C-b " letter)) nil))
    
      (define-key ensime-mode-map (kbd "C-c C-b") nil))
  #+end_src


* Bindings for editing
  Suggestions from scala-mode2's readme
** If inside a multi line comment add asterisk on pressing enter
  #+begin_src emacs-lisp
    (local-set-key (kbd "RET") '(lambda ()
                                  (interactive)
                                  (newline-and-indent)
                                  (scala-indent:insert-asterisk-on-multiline-comment)))
  #+end_src

** Outdent code after indenting it
   #+begin_src emacs-lisp
     (local-set-key (kbd "<backtab>") 'scala-indent:indent-with-reluctant-strategy)
   #+end_src


* Binding to start scala interpreter or sbt
  #+begin_src emacs-lisp
    (if (equal (file-name-extension buffer-file-name) "sbt")
        (local-set-key my-run-shell #'sbt-start)
      (local-set-key my-run-shell #'run-scala))
  #+end_src


* Bindings for interacting with the REPL
  #+begin_src emacs-lisp
    (local-set-key my-send-region #'sbt-send-region)
    (local-set-key my-send-buffer (my-evaluate-buffer-in-repl my-scala-eval-buffer sbt:send-region))
    (local-set-key my-send-line (my-evaluate-line-in-repl my-scala-eval-line sbt:send-region))
    (local-set-key my-send-function (my-evaluate-defun-in-repl my-scala-eval-defun sbt:send-region))
    (local-set-key my-send-file (my-evaluate-file-in-repl my-scala-eval-file sbt:send-region))
  #+end_src


* Bindings for refactoring
  #+begin_src emacs-lisp
    (local-set-key my-refactor-rename #'ensime-refactor-rename)
    (local-set-key my-refactor-organize-imports #'ensime-refactor-organize-imports)
  #+end_src
