* Load scala-mode2
** Load it just once per session
  #+begin_src emacs-lisp
    (unless (fboundp 'scala-mode)
      (load "scala-mode2")
      (setq auto-mode-alist (cdr auto-mode-alist)))
  #+end_src

** Enable scala-mode2
   #+begin_src emacs-lisp
     (scala-mode)
   #+end_src


* Load sbt-mode
** Load it just once per session
  #+begin_src emacs-lisp
    (unless (fboundp 'start-sbt)
      (load "sbt-mode"))
  #+end_src
  

* Start ensime if inside 'ensime' project
  #+begin_src emacs-lisp
    (setq ensime-auto-connect 'ask)
    
    (defvar iqbal-ensime-sbt-plugin-code "")
    
    (defun iqbal-load-ensime ()
      (when (and (executable-find "sbt")
                 (version< (nth 3 (split-string (shell-command-to-string "sbt --version")))
                           "0.13"))
        (warn "Ensime requires sbt 0.13.x and upwards for sbt project"))
      (load "ensime"))
    
    (ignore-errors (when (and buffer-file-name
                              (equal (file-name-extension buffer-file-name) "scala")
                              (locate-dominating-file buffer-file-name ".ensime"))
                     (progn (unless (fboundp 'ensime-scala-mode-hook)
                              (iqbal-load-ensime))
                            (ensime-scala-mode-hook))))
  #+end_src


* Enable flycheck
  #+begin_src emacs-lisp
    (unless (or (not (buffer-file-name))
                (string-equal (file-name-extension buffer-file-name) "sbt"))
      (flycheck-mode))
  #+end_src


* Flash current line after jumping to definition
  #+begin_src emacs-lisp
    (when (fboundp 'ensime-edit-definition)
      (iqbal-highlight-line-after-func ensime-edit-definition))
  #+end_src
