* Retrieving information about C environment
** Find and store information about the environment
   Try retrieving the information only if we need to install any of the
   libraries
   #+begin_src emacs-lisp
     (when (or (and my-install-rtags
                    (not (locate-library "rtags")))
               (and my-install-irony
                    (not (locate-library "irony-mode"))))
       (setq my-gcc-version (my--get-gcc-version)
             my-g++-version (my--get-g++-version)
             my-clang-version (my--get-clang-version)
             my-llvm-executable (my--find-llvm-config-executable)
             my-llvm-version  (when my-llvm-executable
                                (substring (shell-command-to-string (concat my-llvm-executable " --version"))
                                           0
                                           -1))
             my-libclang-version (when my-llvm-executable
                                   (my--get-libclang-version my-llvm-executable))
             my-cmake-version (if (executable-find "cmake")
                                  (nth 2 (split-string (shell-command-to-string "cmake --version"))))))
   #+end_src

** Find global's version
   #+begin_src emacs-lisp
     (setq my-gnu-global-version (my--get-gnu-global-version))
   #+end_src


* Install rtags
  Install rtags for jumping to definition and friends, if requirements are
  satisfied otherwise display the missing requirements
  #+begin_src emacs-lisp
    (when my-install-rtags
      (if (and my-cmake-version
               my-llvm-executable
               (not (version< my-llvm-version "3.1"))
               (or (not (version< (or my-g++-version "0") "4.8"))
                   (not (version< (or my-clang-version "0") "3.2")))
               (not (version< (or my-libclang-version "0") "3.2")))
          (progn (my-install-package 'rtags)
                 (setq my-rtags-available t))
        (warn (concat "rtags requirements not satisfied"
                      "\n\t1. cmake " (if my-cmake-version (concat "[found " my-cmake-version "]") "[not found]")
                      "\n\t2. llvm >= 3.2 " (if my-llvm-executable (concat "[found " my-llvm-version "]") "[not found]")
                      "\n\t3. libclang-dev >= 3.2 (same version as llvm)"
                      (if (not (version< (or my-libclang-version "0") "3.2"))
                          " [found]"
                        " [not found]")
                      "\n\t4. g++ >= 4.8  "
                      (if (not (version< (or my-g++-version "0") "4.7"))
                          "[found]"
                        "[not found]") "\n"
                        "skipping installation"))))
  #+end_src


* Install irony-mode, company-irony and irony-eldoc
  Install irony-mode for context sensitive completion, if requirements are
  satisfied otherwise display the missing requirements
  #+begin_src emacs-lisp
    (when my-install-irony
      (if (and my-cmake-version
               (not (version< my-cmake-version "2.8.3"))
               my-libclang-version)
          (progn (my-install-package 'irony (lambda () (call-interactively 'irony-install-server)))
                 (my-install-packages '(company-irony irony-eldoc))
                 (setq my-irony-available t))
        (warn (concat "irony requirements not satisfied, require\n"
                      "\t1. cmake >= 2.8.3"
                      (if my-cmake-version (concat " [found " my-cmake-version "]") " [not found]") "\n"
                      "\t2. libclang-dev" (if my-libclang-version (concat " [found " my-libclang-version " ]") " [not found]")
                      "\nskipping installation"))))
  #+end_src


* Install company-c-headers for completing headers
  #+begin_src emacs-lisp
    (my-install-package 'company-c-headers)
  #+end_src


* Install gtags if GNU Global is installed
  #+begin_src emacs-lisp
    (when my-c-install-gtags
      (if (and my-gnu-global-version
               (not (version< my-gnu-global-version "5.9.7")))
          (progn (my-install-package 'gtags)
                 (setq my-gtags-available t))
        (cond ((not my-gnu-global-version) (warn "GNU Global not installed, not installing gtags"))
              (t (warn (concat "GNU Global version is " my-gnu-global-version
                               " install latest version to install gtags"))))))
  #+end_src


* Install preproc-font-lock for highlighting preprocessor directives
  #+begin_src emacs-lisp
    (my-install-package 'preproc-font-lock)
  #+end_src
