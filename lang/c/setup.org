* Use c-mode
  #+begin_src emacs-lisp
    (c-mode)
  #+end_src


* Enable gtags-mode
  #+begin_src emacs-lisp
    (gtags-mode)
  #+end_src


* Enable prepaint mode
  #+begin_src emacs-lisp
    (prepaint-mode)
  #+end_src


* Load rtags and start rdm
  #+begin_src emacs-lisp
    (when my-rtags-available
      (unless (fboundp 'rtags-start-process-maybe)
        (load "rtags"))

      (rtags-start-process-maybe))
  #+end_src


* Create GTAGS/TAGS if not created yet
  #+begin_src emacs-lisp
    (let ((project-root (ignore-errors (projectile-project-root))))
      (when project-root
        (cond (my-gtags-available (unless (file-exists-p (concat project-root "GTAGS"))
                                    (shell-command (concat "cd "
                                                           project-root
                                                           " && gtags"))))
              ((executable-find "etags") (unless  (file-exists-p (concat project-root "TAGS"))
                                           (shell-command (concat "cd "
                                                                  project-root
                                                                  " && find . -name \"*.[ch]\" -print | xargs etags -a ")))))))
  #+end_src


* Automatically jump to symbol under cursor in *RTags* buffer
  #+begin_src emacs-lisp
    (setq rtags-error-timer-interval 0.1)
    (setq rtags-tracking t)
  #+end_src


* Load malinka
  #+begin_src emacs-lisp
    (unless (boundp 'malinka-projects-map)
      (load "malinka")
      (when (file-exists-p "~/.emacs.d/malinka-projects.el")
        (load "~/.emacs.d/malinka-projects.el")))
  #+end_src


* Index files if not already indexed
  #+begin_src emacs-lisp
    (let* ((project-root (ignore-errors (projectile-project-root)))
           (project-map (when project-root
                          (car (loop for project-map in malinka-projects-map
                                     when (string-equal (cdr (assoc 'root-directory project-map)) project-root)
                                     collect project-map)))))
      (if (not project-map)
          (warn (concat "Project not configured, please add malinka-define-project directive\n"
                        "to ~/.emacs.d/malinka-projects.el see http://github.com/LefterisJP/malinka for syntax"))
        (when (zerop (string-to-number (shell-command-to-string (concat (rtags-executable-find "rc")
                                                                          " --has-filemanager "
                                                                          project-root))))
          (message (concat "Indexing project, this may take some time, this happens just once per project."
                           " You can manually invoke indexing with malinka-configure-project."
                           "\nThe result of indexing can be seen in *rdm* buffer"))
          (malinka-project-configure (cdr (assoc 'name project-map))
                                     project-root))))
  #+end_src


* Setup jump to definition
** Custom jump to definition function using rtags
  Try to use rtags, if it fails fallback to gtags, if gtags is not available use
  etags TODO: Does not work properly yet
  #+begin_src emacs-lisp
    (defun my-find-definition-rtags-fallback ()
      (with-current-buffer rtags-buffer-name
        (when (= (point-min) (point-max))
          (if rtags-last-request-not-indexed
              (if my-gtags-available (gtags-find-tag) (call-interactively #'find-tag))
            (rtags-find-symbols-by-name-internal "No obvious location found for jump, find symbol"
                                                 "-F")))))

    (defun my-c-find-definition-rtags (&optional prefix)
      (interactive "P")
      (rtags-find-symbol-at-point prefix)
      (my-find-definition-rtags-fallback))
  #+end_src

** Highlight line after jump
   #+begin_src emacs-lisp
     (my-highlight-line-after-func my-c-find-definition-rtags)
     (my-highlight-line-after-func my-find-definition-rtags-fallback)
     (my-highlight-line-after-func gtags-find-tag)
     (my-highlight-line-after-func find-tag)
   #+end_src


* Setup auto-completion
** Disable auto-complete and enable company mode
   Also add company-c-headers to company-backends
   #+begin_src emacs-lisp
     (when my-irony-available
       (auto-complete-mode -1)
       (company-mode)
       (irony-mode)
       (add-to-list 'company-backends 'company-irony)
       (company-irony-setup-begin-commands)
       (add-to-list 'company-backends 'company-c-headers))
   #+end_src
