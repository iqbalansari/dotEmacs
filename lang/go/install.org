* Copy GOPATH's value from the shell
  #+begin_src emacs-lisp
    (let ((cur-go-path (getenv "GOPATH")))
      (when (or (not cur-go-path)
                (zerop (length cur-go-path)))
        (if (equal system-type 'windows-nt) 
            (warn "`GOPATH' not set, godef et al will not work")
          (let ((go-path (cdar (exec-path-from-shell-getenvs '("GOPATH")))))
            (setenv "GOPATH" go-path)
            (when (zerop (length go-path))
              (warn "`GOPATH' not set, godef et al will not work"))))))
  #+end_src


* Install go-autocomplete and go-eldoc
** Is gocode available?
   #+begin_src emacs-lisp
     (setq my-gocode-available (executable-find "gocode"))
   #+end_src

** Install the packages only if gocode is available
   #+begin_src emacs-lisp
     (if my-gocode-available
         (my-install-packages '(company-go go-eldoc))
       (warn "`gocode' not installed autocompletion will not work"))
   #+end_src


* Warn if godef is installed
  #+begin_src emacs-lisp
    (setq my-godef-available (executable-find "godef"))

    (unless my-godef-available
      (warn "`godef' not installed jump to definition would not work"))
  #+end_src


* Extra snippets for go-mode
  #+begin_src emacs-lisp
    (my-install-package 'go-snippets)
  #+end_src
