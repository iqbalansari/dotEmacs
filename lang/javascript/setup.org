* Configurations for js2-mode
** Underline errors
   #+BEGIN_SRC emacs-lisp
     (set-face-attribute 'js2-error nil :underline "red" :foreground nil)
   #+END_SRC

** Indent 'case' on additional level inside 'switch' statements
   #+BEGIN_SRC emacs-lisp
     (setq js2-indent-switch-body t)
   #+END_SRC

** Additional globals
   #+BEGIN_SRC emacs-lisp
     (setq-default js2-global-externs '("module" "require" "setTimeout" "clearTimeout"
                                        "setInterval" "clearInterval" "console" "JSON"))
   #+END_SRC


* Enhancements for imenu
  #+BEGIN_SRC emacs-lisp
    (js2-imenu-extras-mode)
  #+END_SRC


* By default indent to 4 spaces
  #+BEGIN_SRC emacs-lisp
    (setq js2-basic-offset 4)
  #+END_SRC


* Setup Tern for autocompletion and some refactoring
** Check ternjs availability
   #+BEGIN_SRC emacs-lisp
     (setq iqbal-ternjs-available (locate-library "tern"))
   #+END_SRC

** Enable tern-mode
   #+BEGIN_SRC emacs-lisp
     (when iqbal-ternjs-available
       (tern-mode t))
   #+END_SRC

** Setup tern backend for auto-completion if ternjs is available
   #+BEGIN_SRC emacs-lisp
     (setq tern-ac-on-dot nil)
     (define-key tern-mode-keymap "." nil)

     (when iqbal-ternjs-available
       (add-to-list 'company-backends 'company-tern))
   #+END_SRC


* REPL for javascript
** Should we use nodejs-repl
   nodejs-repl is better for node as it provides autocompletion, use it if inside
   a node project
   #+BEGIN_SRC emacs-lisp
     (setq iqbal-js-use-nodejs-repl (when buffer-file-name 
                                   (locate-dominating-file buffer-file-name "package.json")))
   #+END_SRC

** Skewer mode configuration
*** Enable skewer mode
  #+BEGIN_SRC emacs-lisp
    (unless iqbal-js-use-nodejs-repl
      (skewer-mode))
  #+END_SRC
