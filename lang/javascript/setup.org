* Load js2-mode
  #+begin_src emacs-lisp
    (js2-mode)
  #+end_src


* Configurations for js2-mode
** Use 'tab' to choose between possible indentations
  #+begin_src emacs-lisp
    (setq js2-bounce-indent-p t)
  #+end_src
** Indent 'case' on additional level inside 'switch' statements
   #+begin_src emacs-lisp
     (setq js2-indent-switch-body t)
   #+end_src

** Additional globals
   #+begin_src emacs-lisp
     (setq-default js2-global-externs '("module" "require" "setTimeout" "clearTimeout"
                                        "setInterval" "clearInterval" "console" "JSON"))
   #+end_src



  
* Enhancements for imenu
  #+begin_src emacs-lisp
    (js2-imenu-extras-mode)
  #+end_src


* Setup Tern for autocompletion and some refactoring
** Load ternjs
   
   #+begin_src emacs-lisp
     (when (eq system-type 'windows-nt)
       (setq tern-command (list "node" (concat iqbal-home-dir "el-get/tern/bin/tern"))))
     (autoload 'tern-mode "tern.el" nil t)
     (tern-mode t)
   #+end_src
   
** Setup autocompletion
   Setup tern to use autocompletion. Trigger completion on dot

   #+begin_src emacs-lisp
     (load "tern-auto-complete")
     (tern-ac-setup)
     (setq tern-ac-dot-complete t)
   #+end_src
     

* Setup autocompletion and documentation for jQuery
  
  #+begin_src emacs-lisp
     (jquery-doc-setup)
  #+end_src


* Configure comint mode for javascript

  #+begin_src emacs-lisp
    (load "js-comint")
    (setq inferior-js-program-command "node")
    
    (setenv "NODE_NO_READLINE" "1")
  #+end_src


* Use js-beautify to cleanup messy javascript
  This can be also be used for reformatting JSON files for viewing them
  #+begin_src emacs-lisp
    (add-to-list 'load-path (concat otherpackages "js-beautify/"))
    (load "js-beautify")
    (local-set-key (kbd "M-[") 'js-beautify)
  #+end_src  


* Setup code folding
  Enable "hs-minor-mode"
  #+begin_src emacs-lisp 
    (hs-minor-mode)
  #+end_src

  
* Flash the current line after jump to definition
  #+begin_src emacs-lisp
    (defadvice tern-find-definition (after highlight-current-line
                                           (&optional prompt-var))
      "Flash the current line after tern jump"
      (sit-for 0.1)
      (iqbal-highlight-line))
    
    (ad-activate 'tern-find-definition)
  #+end_src

