* Keybindings for editing
  #+begin_src emacs-lisp
    (define-key python-mode-map (kbd "RET") 'newline-and-indent)
  #+end_src


* Keybindings for interacting with python shell
   #+begin_src emacs-lisp
     (define-key python-mode-map my-send-region #'my-py-send-region)
     (define-key python-mode-map my-send-line #'my-py-send-line)
     (define-key python-mode-map my-send-buffer #'python-shell-send-buffer)
     (define-key python-mode-map my-send-function #'python-shell-send-defun)
     (define-key python-mode-map my-send-file #'python-shell-send-file)
   #+end_src


* Keybindings for navigation (set only when not in terminal)
   #+begin_src emacs-lisp
     (when (display-graphic-p)
       (define-key python-mode-map (kbd "C-M-a") 'my-py-begining-of-defun)
       (define-key python-mode-map (kbd "C-M-e") 'my-py-end-of-defun)
       (define-key python-mode-map (kbd "C-M-S-a") 'my-py-begining-of-class)
       (define-key python-mode-map (kbd "C-M-S-e") 'my-py-end-of-class))
   #+end_src


* Keybinding for finding references
  #+begin_src emacs-lisp
    (when (featurep 'ropemacs)
      (define-key python-mode-map my-find-references #'rope-find-occurrences))
  #+end_src


* Set keybindings for Jedi
  #+begin_src emacs-lisp
    (when my-jedi-available
      (define-key python-mode-map my-jump-to-definition 'jedi:goto-definition)
      (define-key python-mode-map my-pop-jump-to-definition-marker 'jedi:goto-definition-pop-marker)
      (define-key python-mode-map my-show-doc 'jedi:show-doc))
  #+end_src


* TODO Keybinding for nosetests menu
  #+begin_src emacs-lisp
    (when (locate-library "nose")
      (define-key python-mode-map "\C-ct" (lambda ()
                               (interactive)
                               (mag-menu '(title
                                           (switches
                                            ("-d" "Drop into debugger on errors" "--pdb"))
                                           (actions
                                            ("a" "Run all nose tests"
                                             (lambda (options) (my-execute-nose-tests options #'nosetests-all)))
                                            ("b" "Run nosetests on current buffer"
                                             (lambda (options) (my-execute-nose-tests options #'nosetests-module)))
                                            ("p" "Run nosetests on testable thing at point in current buffer"
                                             (lambda (options) (my-execute-nose-tests options #'nosetests-one))))))))

      (defun my-execute-nose-tests (options nose-fn)
        (let ((debug (assoc "--pdb" options)))
          (funcall nose-fn debug))))
  #+end_src


* Keybindings for virtualenvwrapper
  #+begin_src emacs-lisp
    (when (locate-library "virtualenvwrapper")
      (define-key python-mode-map (kbd "C-c v") (lambda () (interactive) (discover-show-context-menu 'venv))))
  #+end_src


* Set keybindings for refactoring
  #+begin_src emacs-lisp
    (when (featurep 'ropemacs)
      (define-key python-mode-map my-refactor-rename 'rope-rename)
      (define-key python-mode-map my-refactor-auto-import 'rope-auto-import)
      (define-key python-mode-map my-refactor-organize-imports 'rope-organize-imports))
  #+end_src
