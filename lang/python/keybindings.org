* Keybindings for editing
  #+begin_src emacs-lisp
    (local-set-key (kbd "RET") 'newline-and-indent)
  #+end_src


* Keybindings for interacting with python shell
   #+begin_src emacs-lisp
     (local-set-key my-send-region #'my-py-send-region)
     (local-set-key my-send-line #'my-py-send-line)
     (local-set-key my-send-buffer #'python-shell-send-buffer)
     (local-set-key my-send-function #'python-shell-send-defun)
     (local-set-key my-send-file #'python-shell-send-file)
   #+end_src


* Keybindings for navigation (set only when not in terminal)
   #+begin_src emacs-lisp
     (when (display-graphic-p)
       (local-set-key (kbd "C-M-a") 'my-py-begining-of-defun)
       (local-set-key (kbd "C-M-e") 'my-py-end-of-defun)
       (local-set-key (kbd "C-M-S-a") 'my-py-begining-of-class)
       (local-set-key (kbd "C-M-S-e") 'my-py-end-of-class))
   #+end_src


* Set keybindings for jumping to definition  
  #+begin_src emacs-lisp
    (local-set-key my-jump-to-definition 'jedi:goto-definition)
    (local-set-key my-pop-jump-to-definition-marker 'jedi:goto-definition-pop-marker)
    (local-set-key my-show-doc 'jedi:show-doc)
  #+end_src


* TODO Keybinding for nosetests menu
  #+begin_src emacs-lisp
    (local-set-key "\C-ct" (lambda ()
                              (interactive)
                              (mag-menu '(title
                                          (switches
                                           ("-d" "Drop into debugger on errors" "--pdb"))
                                          (actions
                                           ("a" "Run all nose tests" 
                                            (lambda (options) (my-execute-nose-tests options #'nosetests-all)))
                                           ("b" "Run nosetests on current buffer" 
                                            (lambda (options) (my-execute-nose-tests options #'nosetests-module)))
                                           ("p" "Run nosetests on testable thing at point in current buffer"
                                            (lambda (options) (my-execute-nose-tests options #'nosetests-one))))))))
    
    (defun my-execute-nose-tests (options nose-fn)
      (let ((debug (assoc "--pdb" options)))
        (funcall nose-fn debug)))
  #+end_src
  

* Set keybindings for refactoring
  #+begin_src emacs-lisp
    (local-set-key my-refactor-rename 'rope-rename)
    (local-set-key my-refactor-auto-import 'rope-auto-import)
    (local-set-key my-refactor-organize-imports 'rope-organize-imports)  
  #+end_src

