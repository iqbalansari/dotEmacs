* Fix python-mode's send region
** Elpy's send region works well for arbitrary regions use it instead
   #+begin_src emacs-lisp
     (defun elpy--region-without-indentation (beg end)
       "Return the current region as a string, but without indentation."
       (let ((region (buffer-substring beg end))
             (indent-level nil))
         (catch 'return
           (with-temp-buffer
             (insert region)
             (goto-char (point-min))
             (while (< (point) (point-max))
               (cond
                ((and (not indent-level)
                      (not (looking-at "[ \t]*$")))
                 (setq indent-level (current-indentation)))
                ((and indent-level
                      (not (looking-at "[ \t]*$"))
                      (< (current-indentation)
                         indent-level))
                 (error "Can't adjust indentation, consecutive lines indented less than starting line")))
               (forward-line))
             (indent-rigidly (point-min)
                             (point-max)
                             (- indent-level))
             (buffer-string)))))
   #+end_src

** Custom functions for sending regions based on elpy's code
   #+begin_src emacs-lisp
     (defun iqbal-py-send-region (beg end)
       (interactive "r")
       (python-shell-send-string (elpy--region-without-indentation beg end)))
     
     (defun iqbal-py-send-line ()
       (interactive)
       (python-shell-send-string (elpy--region-without-indentation (line-beginning-position)
                                                                   (line-end-position))))
   #+end_src


* Setup Jedi for autocompletion
** Configuration
  Automatically start completion after inserting a dot
  #+begin_src emacs-lisp
    (setq jedi:complete-on-dot t)
  #+end_src

** Setup jedi for current buffer
   We simply need to call jedi:setup
   #+begin_src emacs-lisp
       (jedi:setup)
   #+end_src


* Setup Rope for refactoring
** Configuration
   1. Prevent rope from setting up keybindings, we'll set our keybindings
   #+begin_src emacs-lisp
     (setq ropemacs-enable-shortcuts nil)
     (setq ropemacs-local-prefix nil)
     (setq ropemacs-global-prefix nil)
   #+end_src
   
   2. Enable autoimport and specify the modules that will we autoimported
   #+begin_src emacs-lisp
     (setq ropemacs-enable-autoimport t)
     (setq ropemacs-autoimport-modules '("os" "shutil")) 
   #+end_src
   
** Start ropemacs
   Load pymacs and load rope, if not already loaded
   #+begin_src emacs-lisp
     (unless (featurep 'pymacs)
       (load "pymacs")
       (pymacs-load "ropemacs" "rope-"))
   #+end_src
  
  
* Setup flycheck for error checking
** Enable flycheck-mode
  #+begin_src emacs-lisp
    (flycheck-mode)
  #+end_src
  
** Use pylint for syntax checking
   #+begin_src emacs-lisp
     (flycheck-select-checker 'python-pylint)
   #+end_src


* Use django style comments with fill-column
  #+begin_src emacs-lisp
    (setq python-fill-docstring-style 'django)
  #+end_src


* Use nosetests for testing
  #+begin_src emacs-lisp
    (when (locate-library "nose")
      (load "nose"))
  #+end_src


* Setup code folding
  Enable "hs-minor-mode"
  #+begin_src emacs-lisp 
    (hs-minor-mode)
  #+end_src


* Use ipython if available
  #+begin_src emacs-lisp
    (when (executable-find "ipython") 
      (setq
       python-shell-interpreter "ipython"
       python-shell-prompt-regexp "In \\[[0-9]+\\]: "
       python-shell-prompt-output-regexp "Out\\[[0-9]+\\]: "
       python-shell-completion-setup-code
       "from IPython.core.completerlib import module_completion"
       python-shell-completion-module-string-code
       "';'.join(module_completion('''%s'''))\n"
       python-shell-completion-string-code
       "';'.join(get_ipython().Completer.all_completions('''%s'''))\n"))
  #+end_src


* Flash current line after a jump to definition
  #+begin_src emacs-lisp
    (defadvice jedi:goto-definition (after highlight-current-line
                                           (&optional other-window deftype use-cache index))
      "Flash the current line after jedi jump"
      (sit-for 0.1)
      (iqbal-highlight-line))
    
    (ad-activate 'jedi:goto-definition)
  #+end_src
