* Choose lisp implementation
  #+BEGIN_SRC emacs-lisp
    (unless (and (boundp 'inferior-lisp-program)
                 inferior-lisp-program
                 (executable-find inferior-lisp-program))
      (setq inferior-lisp-program (or (executable-find "lisp")
                                      (executable-find "sbcl")
                                      (executable-find "clisp")
                                      (progn (warn "No suitable lisp implementation found, slime may not work")
                                             nil))))

    (when (and inferior-lisp-program
               (string-match-p " " inferior-lisp-program))
      (warn (format "Path to `inferior-lisp-program' contains spaces (%s), slime may fail!"
                    inferior-lisp-program)))
  #+END_SRC


* Setup slime
  #+BEGIN_SRC emacs-lisp
    (load "slime")
    (slime-setup '(slime-fancy slime-company slime-mdot-fu))
  #+END_SRC


* Enable redshank mode
  #+BEGIN_SRC emacs-lisp
    (redshank-mode)
  #+END_SRC


* Start slime if not connected yet
  #+BEGIN_SRC emacs-lisp
    ;; Ensures slime is loaded after entire config has loaded
    (run-at-time 0.1 nil (lambda ()
                           (when (and inferior-lisp-program
                                      (not (slime-connected-p)))
                             (save-window-excursion (slime)))))
  #+END_SRC


* Enable slime-mode
  #+BEGIN_SRC emacs-lisp
    (slime-mode)
  #+END_SRC


* Flash the current line after jump to definition
  #+BEGIN_SRC emacs-lisp
    (iqbal-highlight-line-after-func slime-edit-definition)
  #+END_SRC


* Setup code folding
  Enable "hs-minor-mode"
  #+BEGIN_SRC emacs-lisp
    (hs-minor-mode)
  #+END_SRC
