* Set the path to boris
  #+begin_src emacs-lisp
    (unless (boundp 'php-boris-command)
      (setq php-boris-command (or (executable-find "boris")
                                  (executable-find "boris.phar"))))
  #+end_src


* Enable php-boris-mode
  #+begin_src emacs-lisp
    (when (locate-library "php-boris-minor-mode")
      (php-boris-minor-mode))
  #+end_src


* Configuration for jump to definition
** Enable gtags mode
   #+begin_src emacs-lisp
     (when my-gtags-available
       (ggtags-mode +1))

     (setq ggtags-enable-navigation-keys nil)
   #+end_src

** Generate tags file for project if not already generated 
  #+begin_src emacs-lisp
    (when my-gtags-available
      (let ((project-root (or (ignore-errors (projectile-project-root))
                              (locate-dominating-file (or buffer-file-name default-directory)
                                                      "GTAGS"))))
        
        (make-variable-buffer-local 'my-project-root)
        (setq my-project-root project-root)
        (if (and project-root
                 (not (or (string-equal (expand-file-name project-root)
                                        (expand-file-name "~/"))
                          (string-equal (file-truename project-root)
                                        (file-truename "~/.emacs.d/")))))
            (when (and (not (file-exists-p (concat project-root "/GTAGS")))
                       (y-or-n-p (format "GTAG files not present for project [%s], generate them?"
                                         project-root)))
              (message "Generating TAGS for project")
              (shell-command (format "cd %s && gtags" project-root)))
          (warn "Could not locate project root! Skipping generation of TAGS!"))))

  #+end_src

** Regenerate tags for project on saving buffer
   #+begin_src emacs-lisp
     (add-hook (make-variable-buffer-local 'after-save-hook) #'my-php-regenerate-tags)
   #+end_src

** Regex to match included/required files this helps jumping to the files easily using ggtags-find-tag-dwim
   #+begin_src emacs-lisp
     (make-variable-buffer-local 'ggtags-include-pattern)
     (setq ggtags-include-pattern  '("^\\s-*\\(?:include\\|include_once\\|require_once\\|require\\)\\s-*\\((\\)?\\s\"\\(.+\\)\\s\"\\()\\)?\\s-*;" . 2))
   #+end_src


* Get documentation at point
** Load php-extra for documentation of builtin php functions
   #+begin_src emacs-lisp
     (load "php-extras")
   #+end_src


* Enable eldoc
** Enable eldoc
  #+begin_src emacs-lisp
    (eldoc-mode)
    (make-local-variable 'eldoc-documentation-function)
    (setq eldoc-documentation-function #'my-php-eldoc-function)
    (when (fboundp 'remove-function)
      (remove-function :after-until #'my-php-eldoc-function))
  #+end_src


* Setup auto-complete to use php-auto-yasnippets
  #+begin_src emacs-lisp
    (payas/ac-setup)
  #+end_src


* Remove yasnippets from ac-sources
  auto-complete becomes unbearably slow since there are large
  number of snippets for php
  #+begin_src emacs-lisp
    (make-variable-buffer-local 'ac-sources)
    (setq ac-sources (remove 'ac-source-yasnippet ac-sources))
  #+end_src


* Enable syntax checking
** Enable flycheck mode
  #+begin_src emacs-lisp
    (flycheck-mode)
  #+end_src

** Check if phpmd is installed
   #+begin_src emacs-lisp
     (unless (executable-find "phpmd")
       (warn "`phpmd' not found! Install it for better syntax checking"))
   #+end_src
