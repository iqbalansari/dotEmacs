* Set the path to boris
  #+begin_src emacs-lisp
    (unless (boundp 'php-boris-command)
      (setq php-boris-command (or (executable-find "boris")
                                  (executable-find "boris.phar"))))
  #+end_src


* Enable php-boris-mode
  #+begin_src emacs-lisp
    (when (locate-library "php-boris-minor-mode")
      (php-boris-minor-mode))
  #+end_src


* Get documentation at point
  #+begin_src emacs-lisp
    (require 'ehelp)

    (defun my-php-doc-at-point ()
      (interactive)
      (let* ((symbol (symbol-at-point))
             (result (if symbol
                         (php-extras-function-documentation (symbol-name symbol))
                       (error "No symbol at point"))))
        (if result
            (with-electric-help (lambda () (insert result)) "*php-help*")
          (error (concat "No documentation found for `" (symbol-name symbol) "'")))))
  #+end_src


* Enable eldoc
  #+begin_src emacs-lisp
    (load "php-extras")
    (eldoc-mode)
    (php-extras-eldoc-setup)
  #+end_src


* Configuration for jump to definition
** Enable gtags mode
   #+begin_src emacs-lisp
     (when my-gtags-available (gtags-mode +1))
   #+end_src

** Generate tags file for project if not already generated 
  #+begin_src emacs-lisp
    (defvar my-project-root nil)
    (when my-gtags-available
      (let ((project-root (or (ignore-errors (projectile-project-root))
                              (locate-dominating-file (or buffer-file-name default-directory)
                                                      "GTAGS"))))
        
        (make-variable-buffer-local 'my-project-root)
        (setq my-project-root project-root)

        (if (and project-root
                 (not (string-equal (expand-file-name project-root)
                                    (expand-file-name "~/"))))
            (when (and (not (file-exists-p (concat project-root "/GTAGS")))
                       (y-or-n-p (format "GTAG files not present for project [%s], generate them?"
                                         project-root)))
              (message "Generating TAGS for project")
              (shell-command (format "cd %s && gtags" project-root)))
          (warn "Could not locate project root! Skipping generation of TAGS!"))))

  #+end_src

** Regenerate tags for project on saving buffer
   #+begin_src emacs-lisp
     (defun my-php-regenerate-tags ()
       (when my-project-root
         (shell-command (format "cd %s && global -u" my-project-root))
         (message "TAGS regenerated!")))

     (add-hook (make-variable-buffer-local 'after-save-hook) #'my-php-regenerate-tags)
   #+end_src

** Use a single buffer for gtags select
   #+begin_src emacs-lisp
     (setq gtags-select-buffer-single t)
   #+end_src

** Flash line after jumping to definition
   #+begin_src emacs-lisp
     (when my-gtags-available
       (my-highlight-line-after-func gtags-find-tag-from-here)
       (my-highlight-line-after-func gtags-select-tag))
   #+end_src


* Setup auto-complete to use php-auto-yasnippets
  #+begin_src emacs-lisp
    (payas/ac-setup)
  #+end_src


* Enable syntax checking
** Enable flycheck mode
  #+begin_src emacs-lisp
    (flycheck-mode)
  #+end_src

** Check if phpmd is installed
   #+begin_src emacs-lisp
     (unless (executable-find "phpmd")
       (warn "`phpmd' not found! Install it for better syntax checking"))
   #+end_src
