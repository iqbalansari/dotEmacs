* Ensure that autocomplete is installed
  #+begin_src emacs-lisp
    (defvar my-auto-complete-packages
      '(auto-complete pos-tip company))

    (my-install-packages my-auto-complete-packages)
  #+end_src


* Require auto-complete
  #+begin_src emacs-lisp
    (load "auto-complete-config")
  #+end_src


* Auto-complete configurations
** Load default configuration
   #+begin_src emacs-lisp
     (ac-config-default)
   #+end_src

** Set default sources for autocomplete
  #+begin_src emacs-lisp
    (setq-default ac-sources (append ac-sources '(ac-source-yasnippet
                                                  ac-source-imenu
                                                  ac-source-dictionary
                                                  ac-source-abbrev
                                                  ac-source-words-in-same-mode-buffers
                                                  ac-source-filename)))
  #+end_src

** How sensitive is autocompletion
   #+begin_src emacs-lisp
     (setq ac-auto-start 3)
     (setq ac-auto-show-menu 0.5)
   #+end_src

** Enable fuzzy completion
   #+begin_src emacs-lisp
     (setq ac-use-fuzzy t)
   #+end_src

** Enable menu mode-map when autocomplete menu is displayed
   #+begin_src emacs-lisp
     (setq ac-use-menu-map t)
     (define-key ac-menu-map [backtab] 'ac-previous)
   #+end_src

** Display completion correctly
   #+begin_src emacs-lisp
     (setq popup-use-optimized-column-computation nil)
   #+end_src

** Use auto-complete with flyspell
   #+begin_src emacs-lisp
     (ac-flyspell-workaround)
   #+end_src

** To get pop-ups with docs even if a word is uniquely completed from Steve Purcell's config
   #+begin_src emacs-lisp
     (setq-default ac-dwim nil)
   #+end_src
** Maximum width of auto-complete menu
   #+begin_src emacs-lisp
     (setq ac-max-width 0.5)
   #+end_src

** Try to complete, if line already indented on hitting tab
   #+begin_src emacs-lisp
     (setq tab-always-indent 'complete)
   #+end_src

** Do not use pos-tip
   #+begin_src emacs-lisp
     (setq ac-quick-help-prefer-pos-tip nil)
   #+end_src


* Use M-/ for hippie-expand
  #+begin_src emacs-lisp
    (global-set-key (kbd "M-/") 'hippie-expand)

    (setq hippie-expand-try-functions-list
          '(try-complete-file-name-partially
            try-complete-file-name
            try-expand-dabbrev
            try-expand-dabbrev-all-buffers
            try-expand-dabbrev-from-kill))
  #+end_src


* Configuration for using tab for autocompletion taken from [[https://github.com/purcell/emacs.d][Steve Purcell's config]]
  Trigger autocompletion using <tab>
  #+begin_src emacs-lisp
    (defun my-auto-complete-at-point ()
      (when (and (not (minibufferp))
                 (fboundp 'auto-complete-mode)
                 auto-complete-mode
                 (looking-back "\\(\\sw\\|\\s_\\)")
                 (not (looking-at "\\sw\\|\\s_")))
        (auto-complete)))

    (defun set-auto-complete-as-completion-at-point-function ()
      (setq completion-at-point-functions
            (cons 'my-auto-complete-at-point
                  (remove 'my-auto-complete-at-point completion-at-point-functions))))

    (add-hook 'auto-complete-mode-hook 'set-auto-complete-as-completion-at-point-function)
  #+end_src


* Company mode configuration
** Align annotations
   #+begin_src emacs-lisp
     (setq company-tooltip-align-annotations t)
   #+end_src

** Wrap around popup menu on reaching end
  #+begin_src emacs-lisp
    (setq company-selection-wrap-around t)
  #+end_src
