* Install some packages useful for navigation
+ [[https://github.com/winterTTr/ace-jump-mode/wiki][ace-jump-mode]] Move your cursor to ANY position in visible region quickly
+ [[http://www.emacswiki.org/emacs/goto-chg.el][goto-chg]] - Move point through buffer-undo-list positions

#+begin_src emacs-lisp
  (defvar my-navigation-packages
    '(goto-chg
      ace-jump-mode
      helm))

  (my-install-packages my-navigation-packages)
#+end_src


* Ace Jump mode setup
  Binding for jumping to character and line, 'jumping to word'
  is bound to a 'key-chord' in later section
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-c SPC") 'ace-jump-word-mode)
    (global-set-key (kbd "C-c C-SPC") 'ace-jump-line-mode)
  #+end_src


* Swap keybindings for 'pop-tag-mark' and 'tags-loop-continue'
  The find the current bindings inconvenient
  #+begin_src emacs-lisp
    (global-set-key (kbd "M-*") 'tags-loop-continue)
    (global-set-key (kbd "M-,") 'pop-tag-mark)
  #+end_src


* Goto beginning of the line or indentation
  If we are the begining of the line goto to indentation and vice versa
  #+begin_src emacs-lisp
    (defun st2-like-beginning-of-line ()
      "Go to the position of the first non-whitespace character.
    If already there, go to actual beginning of line."
      (interactive "^")
      (let ((col (current-column)))
        (back-to-indentation)
        (if (= col (current-column)) (move-beginning-of-line nil))))

    (global-set-key (kbd "C-a") 'st2-like-beginning-of-line)
  #+end_src


* Preserve point position when scrolling the window
  #+begin_src emacs-lisp
    (setq scroll-preserve-screen-position t)
  #+end_src


* Flash after jumping to definition using imenu
  #+begin_src emacs-lisp
    (add-hook 'imenu-after-jump-hook 'my-highlight-line)
  #+end_src


* Flash line after jumping to an error/occurrence of string
  #+begin_src emacs-lisp
    (defadvice compile-goto-error (after hightlight-line-after-jump (&rest args))
      (recenter)
      (run-at-time 0.5 nil #'my-highlight-line))

    (ad-activate #'compile-goto-error)

    (defadvice occur-mode-goto-occurrence (after hightlight-line-after-jump (&rest args))
      (recenter)
      (run-at-time 0.5 nil #'my-highlight-line))

    (ad-activate #'occur-mode-goto-occurrence)
  #+end_src


* Recenter and flash line after jumping to next error
  #+begin_src emacs-lisp
    (defadvice next-error (after hightlight-line-after-jump (&rest args))
      (recenter)
      (run-at-time 0.5 nil #'my-highlight-line))

    (ad-activate #'next-error)
  #+end_src



* Always rescan buffers when using imenu
  #+begin_src emacs-lisp
    (setq imenu-auto-rescan t)
  #+end_src


* When popping the mark, continue popping until the cursor actually moves
  Taken from [[https://github.com/magnars/.emacs.d]]
  #+begin_src emacs-lisp
    (defadvice pop-to-mark-command (around ensure-new-position activate)
      (let ((p (point)))
        (when (eq last-command 'save-region-or-current-line)
          ad-do-it
          ad-do-it
          ad-do-it)
        (dotimes (i 10)
          (when (= p (point)) ad-do-it))))
  #+end_src


* Keybindings for navigating between errors
  #+begin_src emacs-lisp
    (global-set-key (kbd "M-n") 'next-error)
    (global-set-key (kbd "M-p") 'previous-error)
  #+end_src


* Keybinding for jumping to last change
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-x C-/") 'goto-last-change)
    (global-set-key (kbd "C-x C-?") 'goto-last-change-reverse)
  #+end_src


* Keybinding to quickly jump to a symbol in buffer
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-c s") 'helm-imenu)
  #+end_src
