* Some extra packages for ido
  + [[www.github.com/lewang/flx][flx]] - A more powerful alternative to ido-mode's
          built-in flex matching.
  + [[www.github.com/technomancy/ido-ubiquitous][ido-ubiquitous]] - Use ido (nearly) everywhere
  + [[www.github.com/nonsequitur/smex][smex]]- M-x interface with Ido-style fuzzy matching.
  + [[http://www.emacswiki.org/emacs/download/idomenu.el][idomenu]] - imenu tag selection a la ido

  #+begin_src emacs-lisp
    (defvar iqbal-ido-packages
      '(flx
        ido-ubiquitous
        idomenu
        smex))
    
    (el-get 'sync iqbal-ido-packages)
  #+end_src
  
	
* Ido setup
** Enable ido-mode
  #+begin_src emacs-lisp
    (ido-mode t)
  #+end_src
  
** Use flx for better flexible matching
  #+begin_src emacs-lisp
    (flx-ido-mode t)
  #+end_src
  
** Use ido everywhere
  #+begin_src emacs-lisp
    (ido-ubiquitous-mode t)
  #+end_src
   
** Look for filename at point
   #+begin_src emacs-lisp
     (setq ido-use-filename-at-point 'guess)
   #+end_src
   
** Use flexible matching with Ido
   #+begin_src emacs-lisp
     (setq ido-enable-flex-matching t)
   #+end_src

** Use ~ to jump to home directly or emacs init directory in ido-find-file
   #+begin_src emacs-lisp
     (add-hook 'ido-setup-hook
               (lambda ()
                 ;; Go straight home
                 (define-key ido-file-completion-map
                   (kbd "~")
                   (lambda ()
                     (interactive)
                                     (if (looking-back "~/")
                         (insert ".emacs.d/")
                       (if (looking-back "/")
                           (insert "~/")
                         (call-interactively 'self-insert-command)))))))     
   #+end_src   

** Look for URLs at point
   #+begin_src emacs-lisp
     (setq ido-use-url-at-point t)
   #+end_src


* Keybindings
** Keybinding for idomenu
   #+begin_src emacs-lisp
     (global-set-key (kbd "C-c i") 'idomenu)
   #+end_src
   
** Keybindings for smex
   #+begin_src emacs-lisp
     (global-set-key (kbd "M-x") 'smex)
     (global-set-key (kbd "M-X") 'smex-major-mode-commands)
   #+end_src

** Map Alt-backspace to 'ido-delete-backward-updir
   I often mistakenly type these when in ido-find-file leading to
   'buffer-read-only' error
   #+begin_src emacs-lisp
     (define-key ido-file-dir-completion-map (kbd "M-DEL") 'ido-delete-backward-updir)
   #+end_src

