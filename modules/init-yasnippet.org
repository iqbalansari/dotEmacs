* Ensure that required packages are installed
  #+begin_src emacs-lisp
    (my-install-package 'yasnippet)
  #+end_src


* Do not use '~/.emacs.d' in yas-snippets-dir
  Rather use the absolute path to '~/.emacs.d/snippets'
  #+begin_src emacs-lisp
    (load "yasnippet")
    (setq yas-snippet-dirs (append (list (locate-user-emacs-file "snippets/"))
                                   (remove "~/.emacs.d/snippets" yas-snippet-dirs)))
  #+end_src


* Use ido to prompt for snippets
  #+begin_src emacs-lisp
    (setq yas-prompt-functions
          (cons 'yas-ido-prompt
                (remove 'yas-ido-prompt
                        yas-prompt-functions)))
  #+end_src


* Set verbosity to zero
  #+begin_src emacs-lisp
    (setq yas-verbosity 0)
  #+end_src


* Leave my tab alone
** Disable snippet expansion on tab, it is annoying
  #+begin_src emacs-lisp
    (define-key yas-minor-mode-map (kbd "TAB") nil)
    (define-key yas-minor-mode-map [(tab)] nil)
  #+end_src

** Use C-<enter> to expand snippets
   #+begin_src emacs-lisp
     (define-key yas-minor-mode-map (kbd "<C-return>") #'yas-expand)
   #+end_src


* Enable yasnippet global mode
  #+begin_src emacs-lisp
    (yas-global-mode)
  #+end_src


* Make yasnippet play well with company and auto-complete mode when expanding snippets
  #+begin_src emacs-lisp
    (defun my-complete-with-tab-or-yas ()
      (interactive)
      (yas--inhibit-overlay-hooks 
        (call-interactively (cond ((bound-and-true-p company-pseudo-tooltip-overlay) 'company-complete-common)
                                  ((bound-and-true-p ac-menu) 'ac-expand)
                                  (t 'yas-next-field-or-maybe-expand)))))

    (define-key yas-keymap [tab] 'my-complete-with-tab-or-yas)

    (defun my-complete-with-enter-or-yas ()
      (interactive)
      (yas--inhibit-overlay-hooks 
        (call-interactively (cond ((bound-and-true-p company-pseudo-tooltip-overlay) 'company-complete-selection)
                                  ((bound-and-true-p ac-menu) 'ac-complete)
                                  (t 'newline)))))

    (define-key yas-keymap [return] 'my-complete-with-enter-or-yas)
  #+end_src
