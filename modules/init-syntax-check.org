* Install flycheck
  #+begin_src emacs-lisp
    (my-install-package 'flycheck)
  #+end_src


* Disable syntax checking on new-line
  #+begin_src emacs-lisp
    (eval-after-load "flycheck"
      '(setq flycheck-check-syntax-automatically (delq 'new-line flycheck-check-syntax-automatically)))
  #+end_src


* Check syntax automatically after a second of inactivity
  #+begin_src emacs-lisp
    (setq flycheck-idle-change-delay 1)
  #+end_src


* Underline only errors in buffers
** Disable underlining provided by flycheck
   We will add a custom function that will underline only errors
   #+begin_src emacs-lisp
     (setq flycheck-highlighting-mode nil)
   #+end_src

** Add a custom function for underlining errors
   #+begin_src emacs-lisp
     (require 'flycheck)

     (defun my-add-lines-for-errors (err)
       (flycheck-error-with-buffer err
         (when (equal (flycheck-error-level err) 'error)
           (pcase-let* ((`(,beg . ,end) (flycheck-error-region-for-mode
                                         err 'lines))
                        (overlay (make-overlay beg end))
                        (level (flycheck-error-level err))
                        (category (flycheck-error-level-overlay-category level)))
             (overlay-put overlay 'flycheck-overlay t)
             (overlay-put overlay 'flycheck-error err)
             (overlay-put overlay 'category category)
             (when flycheck-indication-mode
               (overlay-put overlay 'before-string
                            (flycheck-error-level-make-fringe-icon
                             level flycheck-indication-mode)))
             (overlay-put overlay 'help-echo (flycheck-error-message err))
             overlay))))

     (eval-after-load 'flycheck
       '(add-to-list 'flycheck-process-error-functions #'my-add-lines-for-errors))
   #+end_src
