* Install required packages
  #+begin_src emacs-lisp
    (iqbal-install-packages '(inf-mongo
                              eldoc-eval
                              guide-key
                              which-key
                              edit-server
                              bongo))
  #+end_src


* Install try, useful for trying out packages before actually installing them
  #+begin_src emacs-lisp
    (iqbal-install-package 'try)
  #+end_src


* Command to replace the current expression with the result of its evaluation
  #+begin_src emacs-lisp
    (defun eval-and-replace ()
      "Replace the preceding sexp with its value."
      (interactive)
      (backward-kill-sexp)
      (condition-case nil
          (prin1 (eval (read (current-kill 0)))
                 (current-buffer))
        (error (message "Invalid expression")
               (insert (current-kill 0)))))

    (global-set-key (kbd "C-c e") 'eval-and-replace)
  #+end_src


* Keybinding for starting proced
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-x C-p") 'proced)
  #+end_src


* Start emacs-server
  #+begin_src emacs-lisp
    (load "server")
    (unless (server-running-p)
      (server-start))
  #+end_src


* Use 'C-h C-a' as a entry point to starting various types of apropos
  #+begin_src emacs-lisp
    (setq apropos-do-all t)
    (global-set-key (kbd "C-h a") 'apropos-command)
    (define-prefix-command 'Apropos-Prefix nil "Apropos (a,d,f,l,v,C-v)")
    (global-set-key (kbd "C-h C-a") 'Apropos-Prefix)
    (define-key Apropos-Prefix (kbd "a")   'apropos)
    (define-key Apropos-Prefix (kbd "C-a") 'apropos)
    (define-key Apropos-Prefix (kbd "d")   'apropos-documentation)
    (define-key Apropos-Prefix (kbd "f")   'apropos-command)
    (define-key Apropos-Prefix (kbd "l")   'apropos-library)
    (define-key Apropos-Prefix (kbd "v")   'apropos-variable)
    (define-key Apropos-Prefix (kbd "C-v") 'apropos-value)
  #+end_src


* Enable eldoc in modeline when minibuffer is active
** Enable eldoc
  #+begin_src emacs-lisp
    (eldoc-in-minibuffer-mode 1)
  #+end_src

** Use eval-expression to evaluate expressions
   #+begin_src emacs-lisp
     (setq eldoc-eval-preferred-function 'eval-expression)
   #+end_src


* Save macros as functions, credit [[http://draketo.de/light/english/emacs/babcore]]
  #+begin_src emacs-lisp
    (defun iqbal-save-current-kbd-macro-to-dot-emacs (name)
      "Save the current macro as named function definition inside
    your initialization file so you can reuse it anytime in the
    future."
      (interactive "SSave Macro as: ")
      (name-last-kbd-macro name)
      (save-excursion 
        (find-file-literally user-init-file)
        (goto-char (point-max))
        (insert "\n\n;; Saved macro\n")
        (insert-kbd-macro name)
        (insert "\n")))
  #+end_src


* which-key configuration
 #+begin_src emacs-lisp
   (setq which-key-idle-delay 0.3)
   (which-key-mode +1)
   (which-key-setup-side-window-bottom)
   (setq which-key-side-window-max-height 0.5)
   (setq which-key-sort t)
 #+end_src


* Additional keybinding for redo in calc
  Just for consistency with regular redo keybinding
  #+begin_src emacs-lisp
    (eval-after-load "calc"
      '(define-key calc-mode-map (kbd "C-?") #'calc-redo))
  #+end_src


* Keybinding to start calculator
  By default start calc, but with prefix argument start simple calculator
  #+begin_src emacs-lisp
    (defun iqbal-start-calculator ()
      (interactive)
      (if current-prefix-arg
          (call-interactively #'calculator)
        (call-interactively #'calc)))

    (global-set-key (kbd "C-c C") #'iqbal-start-calculator)
  #+end_src


* Start edit-server
  #+begin_src emacs-lisp
    (edit-server-start)
  #+end_src


* Bongo configuration
** Keybinding to start bongo
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-c M") #'bongo)
  #+end_src

** Autoload bongo-library-mode
   #+begin_src emacs-lisp
     (autoload #'bongo-library-mode "bongo")
   #+end_src


* Location of RFC files
  #+begin_src emacs-lisp
    (setq irfc-directory (locate-user-emacs-file "org/RFCs/"))
  #+end_src
