* Ensure that autocomplete packages are installed
  #+begin_src emacs-lisp
    (defvar iqbal-auto-complete-packages
      '(company company-quickhelp auto-complete pos-tip))

    (iqbal-install-packages iqbal-auto-complete-packages)
  #+end_src


* Auto-complete configurations
** How sensitive is autocompletion
   #+begin_src emacs-lisp
     (setq ac-auto-start 3)
     (setq ac-auto-show-menu 0.5)
   #+end_src

** Enable fuzzy completion
   #+begin_src emacs-lisp
     (setq ac-use-fuzzy t)
   #+end_src

** Enable menu mode-map when autocomplete menu is displayed
   #+begin_src emacs-lisp
     (setq ac-use-menu-map t)
   #+end_src

** Display completion correctly
   #+begin_src emacs-lisp
     (setq popup-use-optimized-column-computation nil)
   #+end_src

** Use auto-complete with flyspell
   #+begin_src emacs-lisp
     (eval-after-load "auto-complete"
       '(progn (define-key ac-menu-map [backtab] 'ac-previous)
               (ac-flyspell-workaround)))
   #+end_src

** To get pop-ups with docs even if a word is uniquely completed from Steve Purcell's config
   #+begin_src emacs-lisp
     (setq-default ac-dwim nil)
   #+end_src

** Maximum width of auto-complete menu
   #+begin_src emacs-lisp
     (setq ac-max-width 0.5)
   #+end_src

** Try to complete, if line already indented on hitting tab
   #+begin_src emacs-lisp
     (setq tab-always-indent 'complete)
   #+end_src

** Do not use pos-tip
   #+begin_src emacs-lisp
     (setq ac-quick-help-prefer-pos-tip nil)
   #+end_src


* Use M-/ for hippie-expand
  #+begin_src emacs-lisp
    (global-set-key (kbd "M-/") 'hippie-expand)

    (setq hippie-expand-try-functions-list
          '(try-complete-file-name-partially
            try-complete-file-name
            try-expand-dabbrev
            try-expand-dabbrev-all-buffers
            try-expand-dabbrev-from-kill
            try-expand-all-abbrevs
            try-expand-list
            try-expand-line))
  #+end_src


* Configuration for using tab for autocompletion taken from [[https://github.com/purcell/emacs.d][Steve Purcell's config]]
  Trigger autocompletion using <tab>
  #+begin_src emacs-lisp
    (defun iqbal-auto-complete-at-point ()
      (when (and (not (minibufferp))
                 auto-complete-mode
                 (looking-back "\\(\\sw\\|\\s_\\)")
                 (not (looking-at "\\sw\\|\\s_")))
        (auto-complete)))

    (defun set-auto-complete-as-completion-at-point-function ()
      (setq completion-at-point-functions
            (cons 'iqbal-auto-complete-at-point
                  (remove 'iqbal-auto-complete-at-point completion-at-point-functions))))

    (add-hook 'auto-complete-mode-hook 'set-auto-complete-as-completion-at-point-function)
  #+end_src


* Company mode configuration
** Align annotations
   #+begin_src emacs-lisp
     (setq company-tooltip-align-annotations t)
   #+end_src

** Wrap around popup menu on reaching end
  #+begin_src emacs-lisp
    (setq company-selection-wrap-around t)
  #+end_src

** Allow non-matching input when company-mode is active
   #+begin_src emacs-lisp
     (setq company-require-match nil)
   #+end_src

** Keybindings
   Remap company-complete-common to company-complete-common-or-cycle
   #+begin_src emacs-lisp
     (eval-after-load "company"
       '(progn (define-key company-active-map [remap company-complete-common] #'company-complete-common-or-cycle)
               (define-key company-active-map (kbd "<backtab>") #'company-select-previous)))
   #+end_src


* Enable company-mode globally
  #+begin_src emacs-lisp
    (setq company-global-modes '(not erlang-mode python-mode web-mode))
    (setq iqbal-default-company-backends '(company-capf company-dabbrev company-files))
    (setq-default company-backends iqbal-default-company-backends)
    (make-variable-buffer-local 'company-backends)
    (global-company-mode)
  #+end_src


* Enable quick help for company-mode
  #+begin_src emacs-lisp
    (when (display-graphic-p)
      (company-quickhelp-mode +1))
  #+end_src


* Enable company-ispell in all text/fundamental mode buffers
  #+begin_src emacs-lisp
    (defun iqbal-text-mode-enable-completion ()
      (setq company-backends '(company-capf company-ispell company-dabbrev)))

    (add-hook 'text-mode-hook #'iqbal-text-mode-enable-completion)
    (add-hook 'fundamental-mode #'iqbal-text-mode-enable-completion)
  #+end_src
