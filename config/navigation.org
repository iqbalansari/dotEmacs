* Install some packages useful for navigation
  #+BEGIN_SRC emacs-lisp
    (defvar iqbal-navigation-packages
      '(goto-chg
        ace-jump-mode))
  
    (iqbal-install-packages iqbal-navigation-packages)
  #+END_SRC


* Ace Jump mode setup
** Use line-mode if called with single prefix arg
  #+BEGIN_SRC emacs-lisp
    (setq ace-jump-mode-submode-list '(ace-jump-word-mode
                                       ace-jump-line-mode
                                       ace-jump-char-mode))
  #+END_SRC

** Keybinding for ace-jump-mode
   #+BEGIN_SRC emacs-lisp
     (global-set-key (kbd "C-c SPC") 'ace-jump-mode)
   #+END_SRC


* Push mark before jumping to last change
  #+BEGIN_SRC emacs-lisp
    (defadvice goto-last-change (before iqbal-push-mark-before-jumping-to-chg (&rest ignored))
      (push-mark))
  #+END_SRC


* Swap keybindings for 'pop-tag-mark' and 'tags-loop-continue'
  The find the current bindings inconvenient
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-*") 'tags-loop-continue)
    (global-set-key (kbd "M-,") 'pop-tag-mark)
  #+END_SRC


* Goto beginning of the line or indentation
  If we are the begining of the line goto to indentation and vice versa
  #+BEGIN_SRC emacs-lisp
    (defun iqbal-beginning-of-line-or-indent ()
      "Go to the position of the first non-whitespace character.
    If already there, go to actual beginning of line."
      (interactive "^")
      (if (bolp)
          (back-to-indentation)
        (move-beginning-of-line nil)))

    (global-set-key (kbd "C-a") 'iqbal-beginning-of-line-or-indent)
  #+END_SRC


* Preserve point position when scrolling the window
  #+BEGIN_SRC emacs-lisp
    (setq scroll-preserve-screen-position t)
  #+END_SRC


* Flash current line after jumping to buffers
** After jumping using imenu
  #+BEGIN_SRC emacs-lisp
    (add-hook 'imenu-after-jump-hook 'iqbal-highlight-line t)
  #+END_SRC

** After jumping to occurrence from occur mode 
   #+BEGIN_SRC emacs-lisp
     (add-hook 'occur-mode-find-occurrence-hook #'iqbal-highlight-line t)
   #+END_SRC

** After jumping to error from grep/compilation mode
   #+BEGIN_SRC emacs-lisp
     (add-hook 'next-error-hook #'iqbal-highlight-line t)
   #+END_SRC


* Unfold headline when jumping to a point in org buffer
  #+BEGIN_SRC emacs-lisp
    (defun iqbal-org-reveal-maybe ()
      (when (eq major-mode 'org-mode)
        (org-reveal)))

    (add-hook 'next-error-hook #'iqbal-org-reveal-maybe)
    (add-hook 'occur-mode-find-occurrence-hook #'iqbal-org-reveal-maybe)
  #+END_SRC


* Always rescan buffers when using imenu
  #+BEGIN_SRC emacs-lisp
    (setq imenu-auto-rescan t)
  #+END_SRC


* When popping the mark, continue popping until the cursor actually moves
  Taken from [[https://github.com/magnars/.emacs.d]]
  #+BEGIN_SRC emacs-lisp
    (defadvice pop-to-mark-command (around ensure-new-position activate)
      (let ((p (point)))
        (when (eq last-command 'save-region-or-current-line)
          ad-do-it
          ad-do-it
          ad-do-it)
        (dotimes (i 10)
          (when (= p (point)) ad-do-it))))
  #+END_SRC


* Keybindings for navigating between errors
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-n") 'next-error)
    (global-set-key (kbd "M-p") 'previous-error)
  #+END_SRC


* Keybinding for jumping to last change
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "C-x C-/") 'goto-last-change)
    (global-set-key (kbd "C-x C-?") 'goto-last-change-reverse)
  #+END_SRC


