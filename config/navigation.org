* Install some packages useful for navigation
  #+BEGIN_SRC emacs-lisp
    (defvar iqbal-navigation-packages
      '(goto-chg
        avy
        ace-link
        helm))

    (iqbal-install-packages iqbal-navigation-packages)
  #+END_SRC


* Avy setup
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-c SPC") 'avy-goto-word-or-subword-1)
  #+end_src


* Ace link setup
  #+BEGIN_SRC emacs-lisp
    (add-hook 'after-init-hook #'ace-link-setup-default)
  #+END_SRC


* Push mark before jumping to last change
  #+BEGIN_SRC emacs-lisp
    (defadvice goto-last-change (before iqbal-push-mark-before-jumping-to-chg (&rest ignored))
      (push-mark))
  #+END_SRC


* Swap keybindings for 'pop-tag-mark' and 'tags-loop-continue'
  The find the current bindings inconvenient
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-*") 'tags-loop-continue)
    (global-set-key (kbd "M-,") 'pop-tag-mark)
  #+END_SRC


* Goto beginning of the line or indentation
  If we are the begining of the line goto to indentation and vice versa
  #+BEGIN_SRC emacs-lisp
    (defun iqbal-beginning-of-line-or-indent ()
      "Go to the position of the first non-whitespace character.
    If already there, go to actual beginning of line."
      (interactive "^")
      (if (bolp)
          (back-to-indentation)
        (move-beginning-of-line nil)))

    (global-set-key (kbd "C-a") 'iqbal-beginning-of-line-or-indent)
  #+END_SRC


* Preserve point position when scrolling the window
  #+BEGIN_SRC emacs-lisp
    (setq scroll-preserve-screen-position t)
  #+END_SRC


* Recenter line and flash current line after jumping to buffers
** After jumping using imenu
  #+BEGIN_SRC emacs-lisp
    (add-hook 'imenu-after-jump-hook #'iqbal-reorient t)
  #+END_SRC

** After jumping to occurrence from occur mode 
   #+BEGIN_SRC emacs-lisp
     (add-hook 'occur-mode-find-occurrence-hook #'iqbal-reorient t)
   #+END_SRC

** After finding a tag
   #+BEGIN_SRC emacs-lisp
     (add-hook 'find-tag-hook #'iqbal-reorient t)
   #+END_SRC

** After jumping to error from grep/compilation mode
   #+BEGIN_SRC emacs-lisp
     (add-hook 'next-error-hook #'iqbal-reorient t)
   #+END_SRC

** After jumping to a function from help-mode
   #+BEGIN_SRC emacs-lisp
     (defun iqbal-help-flash-line-on-find-function (orig &rest args)
       (let ((result (apply orig args)))
         (when (and result
                    (not (eq major-mode 'help-mode)))
           (iqbal-reorient))
         result))

     (advice-add 'help-button-action :around #'iqbal-help-flash-line-on-find-function)
   #+END_SRC

** After jumping to last change
   #+BEGIN_SRC emacs-lisp
     (advice-add 'goto-last-change :after #'iqbal-reorient)
     (advice-add 'goto-last-change-reverse :after #'iqbal-reorient)
   #+END_SRC



* Always rescan buffers when using imenu
  #+BEGIN_SRC emacs-lisp
    (setq imenu-auto-rescan t)
  #+END_SRC


* When popping the mark, continue popping until the cursor actually moves
  Credits: [[https://github.com/magnars/.emacs.d]]
  #+BEGIN_SRC emacs-lisp
    (defadvice pop-to-mark-command (around ensure-new-position activate)
      (let ((p (point)))
        (when (eq last-command 'save-region-or-current-line)
          ad-do-it
          ad-do-it
          ad-do-it)
        (dotimes (i 10)
          (when (= p (point)) ad-do-it))))
  #+END_SRC


* Keybindings for navigating between errors
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-n") 'next-error)
    (global-set-key (kbd "M-p") 'previous-error)
  #+END_SRC


* Keybinding for jumping to last change
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "C-x C-/") 'goto-last-change)
    (global-set-key (kbd "C-x C-?") 'goto-last-change-reverse)
  #+END_SRC


* Keybinding for imenu
  #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "C-c s") 'imenu)
  #+END_SRC
